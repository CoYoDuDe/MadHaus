// Deklaration der Ein- und Ausgänge
I1: house_left_switch
I2: house_right_switch
I3: swing_left_switch
I4: swing_right_switch
I5: swing_middle_switch
I6: start_button
I7: stop_button
I8: emergency_stop
I9: brake_switch

Q1: pneumatic_cylinder
Q2: relay_turn_right
Q3: relay_turn_left
Q4: brake_cylinder
Q5: light_relay

// Hilfsrelais und Timer
M1: running
M2: direction (TRUE = right, FALSE = left)
M3: turn_count
T1: start_timer (3s)
T2: initial_swing_timer (3s)
T3: swing_middle_timer (3s)
T4: braking_timer (3s)
T5: swing_pulse_timer (0.1s - 0.5s)
T6: swing_15deg_timer (3s)

// Lichtsteuerung
Q5 = I6

// Initiale Startüberprüfung
T1 = (I6 AND NOT (I6 AFTER 3s))  // Start-Taste muss 3 Sekunden gedrückt bleiben
M1 = (T1 AND I6)                 // Startprozess beginnt, wenn T1 erfüllt ist

// Bremsüberprüfung
Q4 = (M1 AND NOT (I9 = LOW))  // Bremse wird deaktiviert, wenn der Startprozess läuft und die Bremse geöffnet ist

// Initiale Schaukel-Routine
T2 = (M1 AND I6)              // Initialer Schaukeltimer
Q1 = (T2 AFTER 3s)            // Pneumatikzylinder wird aktiviert für 3 Sekunden
Q1 = NOT (T2 AFTER 3s)        // Pneumatikzylinder wird deaktiviert nach 3 Sekunden

// Normale Schaukel-Routine
T3 = (M1 AND I6)              // Schaukel-Mitte-Timer
Q1 = (T3 AFTER 3s)            // Pneumatikzylinder wird aktiviert für 3 Sekunden
Q1 = NOT (T3 AFTER 3s)        // Pneumatikzylinder wird deaktiviert nach 3 Sekunden

// Hausdrehrichtungen
Q2 = (M2 AND I6)              // Dreht nach rechts, wenn M2 wahr ist
Q3 = (NOT M2 AND I6)          // Dreht nach links, wenn M2 falsch ist

// Bremsroutine
T4 = (M1 AND (I7 OR I8))      // Brems-Timer wird aktiviert, wenn Not-Aus oder Stop gedrückt wird
Q2 = (T4 AND M2)              // Dreht nach links, wenn M2 wahr ist
Q3 = (T4 AND NOT M2)          // Dreht nach rechts, wenn M2 falsch ist

// Schaukel in Mittelposition bringen
T5 = (M1 AND I6)              // Schaukel-Pulstimer
Q1 = (T5 AFTER 0.1s)          // Pneumatikzylinder wird kurz aktiviert
Q1 = NOT (T5 AFTER 0.1s)      // Pneumatikzylinder wird deaktiviert

// Not-Aus und Stop-Taste
M1 = NOT (I7 OR I8)           // Prozess wird gestoppt, wenn Not-Aus oder Stop gedrückt wird

// Schaukel-Routine bei 15 Grad
T6 = (M1 AND I6)              // 15-Grad-Schaukeltimer
Q1 = (T6 AFTER 3s)            // Pneumatikzylinder wird aktiviert für 3 Sekunden
Q1 = NOT (T6 AFTER 3s)        // Pneumatikzylinder wird deaktiviert nach 3 Sekunden

// Set brake when house is in upright position
Q4 = (I1 AND I2 AND I5)  // Bremse wird aktiviert, wenn Haus und Schaukel in Ausgangsposition sind

// Komplettierungslogik für 15-Grad-Routine und Bremsvorgang
IF (M1 AND direction = TRUE) THEN
    // 15-Grad-Schaukel-Routine
    Q1 = (T6 AFTER 3s)            // Pneumatikzylinder wird aktiviert für 3 Sekunden
    Q1 = NOT (T6 AFTER 3s)        // Pneumatikzylinder wird deaktiviert nach 3 Sekunden
    
    // Bremsroutine
    Q2 = (T4 AND direction = FALSE)  // Dreht nach links, wenn direction wahr ist
    Q3 = (T4 AND direction = TRUE)   // Dreht nach rechts, wenn direction falsch ist

    // Schaukel in Mittelposition bringen
    T5 = (M1 AND I6)              // Schaukel-Pulstimer
    Q1 = (T5 AFTER 0.1s)          // Pneumatikzylinder wird kurz aktiviert
    Q1 = NOT (T5 AFTER 0.1s)      // Pneumatikzylinder wird deaktiviert
ENDIF

IF (turn_count >= 2) THEN
    // Wechsel der Richtung
    Q2 = FALSE
    WHILE house_position <> 'upright' DO END_WHILE
    direction = NOT direction
    turn_count = 0
ENDIF

// Sicherstellen, dass Bremse aktiviert wird, wenn Haus und Schaukel in Ausgangsposition sind
IF house_left_switch AND house_right_switch AND swing_middle_switch THEN
    Q4 = TRUE  // Bremse aktivieren
ENDIF
